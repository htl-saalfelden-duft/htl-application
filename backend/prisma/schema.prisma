// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
	binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
	id				String		@id @default(auto()) @map("_id") @db.ObjectId
	schema			Int			@default(1)

	name			String
	email			String		@unique
	userRoleKey	  	String		@default("user")

	passwordHash	String?
	active			Boolean		@default(true)

	createdAt		DateTime	@default(now())
}

model Applicant {
    id            			String      @id @default(auto()) @map("_id") @db.ObjectId
	schema					Int			@default(1)

	email					String		@unique
	emailConfirmed			Boolean		@default(false)

	passwordHash			String?
	statusKey				String?		@default("created") //ApplicantStatus
	active					Boolean		@default(true)
	dsgvo					Boolean		@default(false)

	details					ApplicantDetails?
    contacts      			Contact[]
    applications  			Application[]
    schoolReport  			SchoolReport?

	registeredAt			DateTime?
	createdAt				DateTime	@default(now())
}

type ApplicantDetails {
    firstname     			String?
    moreFirstname			String?
    lastname      			String?
	birthdate				DateTime?
	svnr					String?
	svInstitution			String?
	countryOfBirth			String?		//Country
	placeOfBirth			String?
	nationality				String?		//Country
	language				String?		//Language
	sex						String?		//Sex
	religion				String?		//Religion
	schoolAge				Boolean?
	boardingSchool			Boolean?
	previousSchoolTxt		String?
	previousSchoolNum		String?
	previousSchoolAddress	String?
	secondChoiceSchool		String?
	annotation				String?
}

model Application {
    id          	String    		@id @default(auto()) @map("_id") @db.ObjectId
	schema			Int				@default(1)

	priority		Int

    applicant   	Applicant 		@relation(fields: [applicantID], references: [id], onDelete: Cascade)
    applicantID		String    		@db.ObjectId

    schoolClass   	SchoolClass? 	@relation(fields: [schoolClassID], references: [id])
    schoolClassID 	String?      	@db.ObjectId

	statusKey		String			@default("created") //ApplicationStatus

	createdAt		DateTime		@default(now())
}
type Contact {
    title          			String?		//Title
    degree					String?
	sufixDegree				String?
    firstname     			String?
    moreFirstname 			String?
    lastname      			String?
	birthdate				DateTime?
	svnr					String?
	country					String?		//Country
	zip						String?
	city					String?
	street					String?
	streetNr				String?
	phone					String?
	email					String?

	legalGardian			Boolean?
	liableToPay				Boolean?
	decitionTo				Boolean?		@default(true)
	postTo					Boolean?		@default(true)
	pupilInBoardingSchool	Boolean?
	primaryResidenz			Boolean?		//Hauptwohnsitz

	annotation				String?

//	clearenceDigitalSchool	Boolean		
//	pupilLivesHere			Boolean
//	isHomeAddress			Boolean

	contactTypeKey	  		String
}

type SchoolReport {
    gerGrade 		Int?
    gerGroup 		String?	//SchoolReportGroup
	engGrade		Int?
	engGroup		String?	//SchoolReportGroup
	mathGrade		Int?
	mathGroup		String?	//SchoolReportGroup
	historyGrade	Int?
	geographyGrade	Int?
	chemistryGrade	Int?
	physicsGrade	Int?
	biologieGrade	Int?
}

model SchoolClass {
    id          	String		@id @default(auto()) @map("_id") @db.ObjectId
	schema			Int			@default(1)

    title       	String
	sfkz			String
    year        	String
    maxPupils   	Int
	active			Boolean		@default(true)
    applications	Application[]

	@@unique([title, year])
}

model UserRole {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

	key		String	@unique
    title 	String
}

model ContactType {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

	key		String	@unique
    title 	String
}

model Country {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

    title 	String	@unique
}

model Language {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

    title 	String	@unique
}

model Religion {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

    title 	String	@unique
}

model ApplicationStatus {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

	key		String  @unique
    title 	String
}

model ApplicantStatus {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

	key		String  @unique
    title 	String
}

model Sex {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

    title 	String	@unique
}

model SchoolReportGroup {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

    title 	String @unique
}

model Title {
    id    	String 	@id @default(auto()) @map("_id") @db.ObjectId
	schema	Int		@default(1)

    title 	String @unique
}
