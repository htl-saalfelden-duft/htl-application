version: "3.7"

services:
    backend:
        image: htl_application_backend_dev
        container_name: htl_application_backend_dev
        build:
            context: ./backend
            target: development
        volumes:
            - ./backend:/usr/src/app
        ports:
            - 3000:3000
        command: npm run start:dev
        env_file:
            - ./backend/.env
        environment:
            - DATABASE_URL=mongodb://root:secret@mongo:27017/htlApplication?authSource=admin&replicaSet=rs0&directConnection=true
        depends_on:
            - mongo

    mongo:
        build:
            context: ./docker/mongo/
        command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--keyFile", "/data/keyfile.pem"]
        ports:
            - 27017:27017
        healthcheck:
            test: echo "try { rs.status() } catch (err) { use admin; db.auth('root', 'secret'); rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        volumes:
            - "mongo_data:/data/db"
            - "mongo_config:/data/configdb"
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: secret

    mongo-express:
        image: mongo-express
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: secret
            ME_CONFIG_MONGODB_URL: mongodb://root:secret@mongo:27017?replicaSet=rs0&directConnection=true
volumes:
    mongo_data:
    mongo_config:
