services:
    frontend:
        container_name: htl_application_frontend
        build:
            context: ./frontend
        ports:
            - 443:443
        volumes:
            - /var/log/nginx:/var/log/nginx/
            - ./frontend/ssl:/etc/ssl/
        environment:
            - BACKEND_API_URL=backend:3000
        depends_on:
            - backend
      
    backend:
        container_name: htl_application_backend
        build:
            context: ./backend
            target: production
        ports:
            - 3000:3000
        command: node ./dist/src/main.js
        env_file:
            - ./backend/.env
        environment:
            RSA_PUBLIC_KEY_FILE: /run/secrets/rsa_public_key
            RSA_PRIVATE_KEY_FILE: /run/secrets/rsa_private_key
            HMAC_SECRET: ${HMAC_SECRET}
            EMAIL_VERIFICATION_TOKEN_SECRET: ${EMAIL_VERIFICATION_TOKEN_SECRET}
            MONGODB_USER: ${MONGODB_USER}
            MONGODB_PASSWORD: ${MONGODB_PASSWORD}
            SMTP_PASSWORD: ${SMTP_PASSWORD}            
        secrets:
            - rsa_public_key
            - rsa_private_key            
        restart: unless-stopped
        depends_on:
            - mongo

    mongo:
        container_name: htl_application_mongo
        build:
            context: ./docker/mongo/
        command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--keyFile", "/data/keyfile.pem"]
        ports:
            - 27017:27017
        healthcheck:
            test: echo "try { rs.status() } catch (err) { use admin; db.auth(${MONGODB_USER}, ${MONGODB_PASSWORD}); rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        volumes:
            - "mongo_data:/data/db"
            - "mongo_config:/data/configdb"
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}

secrets:
    rsa_public_key:
        file: rsa_public.pem
    rsa_private_key:
        file: rsa_private.pem            
volumes:
    mongo_data:
    mongo_config:
