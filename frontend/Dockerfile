# Stage 0, "build-stage", based on Node.js, to build and compile the frontend
FROM node:18-alpine as build-stage

WORKDIR /app

COPY package*.json /app/

RUN npm install

COPY ./ /app/

# RUN npm run build

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:alpine

COPY --from=build-stage /app/build/ /usr/share/nginx/html

COPY ./docker/generate-config.sh .

COPY ./docker/custom-nginx.template /etc/nginx/conf.d/

COPY ./ssl/private.key /etc/ssl/private.key
COPY ./ssl/public.crt /etc/ssl/public.crt

RUN chmod +x generate-config.sh

EXPOSE 80

ENTRYPOINT [ "/bin/sh", "generate-config.sh"]